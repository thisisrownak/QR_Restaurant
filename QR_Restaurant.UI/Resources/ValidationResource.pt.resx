<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address" xml:space="preserve">
    <value>Insira o endereço.</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Por favor, insira o email.</value>
  </data>
  <data name="EmailFormat" xml:space="preserve">
    <value>Você não inseriu um endereço de e-mail no formato correto.</value>
  </data>
  <data name="EmailMaxLength" xml:space="preserve">
    <value>O endereço de e-mail não deve exceder 200 caracteres.</value>
  </data>
  <data name="Exists" xml:space="preserve">
    <value>Existe um registro no banco de dados com um dos campos inseridos.</value>
  </data>
  <data name="ImageControl" xml:space="preserve">
    <value>O arquivo carregado deve ser um arquivo de imagem e não deve exceder 6 MB.</value>
  </data>
  <data name="MaxAddress" xml:space="preserve">
    <value>O endereço não deve exceder 200 caracteres.</value>
  </data>
  <data name="MaxInt" xml:space="preserve">
    <value>O valor do número é maior do que deveria ser.</value>
  </data>
  <data name="MaxLength" xml:space="preserve">
    <value>O número máximo de caracteres para o campo foi excedido.</value>
  </data>
  <data name="MaxManagerName" xml:space="preserve">
    <value>O nome não deve ter mais de 50 caracteres.</value>
  </data>
  <data name="MaxPhone" xml:space="preserve">
    <value>O número de telefone não deve ter mais de 15 caracteres.</value>
  </data>
  <data name="MaxRestaurantDescription" xml:space="preserve">
    <value>A descrição não deve exceder 1000 caracteres.</value>
  </data>
  <data name="MaxRestaurantName" xml:space="preserve">
    <value>O nome do restaurante não deve exceder 150 caracteres.</value>
  </data>
  <data name="MaxSurname" xml:space="preserve">
    <value>O sobrenome não deve exceder 70 caracteres.</value>
  </data>
  <data name="MaxTableName" xml:space="preserve">
    <value>O nome da tabela não deve exceder 500 caracteres.</value>
  </data>
  <data name="MaxTableNo" xml:space="preserve">
    <value>O nome da tabela não deve exceder 10.000 caracteres.</value>
  </data>
  <data name="MinInt" xml:space="preserve">
    <value>O número deve ser maior que zero.</value>
  </data>
  <data name="MinTableNo" xml:space="preserve">
    <value>O número da mesa deve ser maior que 0.</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Por favor insira o nome.</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>Por favor, digite sua nova senha.</value>
  </data>
  <data name="NotEmpty" xml:space="preserve">
    <value>Por favor, preencha o campo.</value>
  </data>
  <data name="NumberFormat" xml:space="preserve">
    <value>O campo deve consistir em números.</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Por favor, digite a senha.</value>
  </data>
  <data name="PasswordAgain" xml:space="preserve">
    <value>A repetição da senha não está correta.</value>
  </data>
  <data name="PasswordMaxChar" xml:space="preserve">
    <value>Sua senha não deve exceder 35 caracteres.</value>
  </data>
  <data name="PasswordMinChar" xml:space="preserve">
    <value>Sua senha deve ter pelo menos 6 caracteres.</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Insira o número do telefone.</value>
  </data>
  <data name="RestaurantDescription" xml:space="preserve">
    <value>Insira a descrição.</value>
  </data>
  <data name="RestaurantName" xml:space="preserve">
    <value>Insira o nome do restaurante.</value>
  </data>
  <data name="RestaurantPhone" xml:space="preserve">
    <value>Insira o número do telefone.</value>
  </data>
  <data name="StartEndDate" xml:space="preserve">
    <value>A data de término deve ser posterior à data de início.</value>
  </data>
  <data name="Surname" xml:space="preserve">
    <value>Por favor, insira o sobrenome.</value>
  </data>
  <data name="TableName" xml:space="preserve">
    <value>Insira o nome da tabela.</value>
  </data>
  <data name="TableNo" xml:space="preserve">
    <value>Insira o número da tabela</value>
  </data>
  <data name="TableNoFormat" xml:space="preserve">
    <value>O número da mesa deve consistir em números.</value>
  </data>
  <data name="UniqueEmail" xml:space="preserve">
    <value>Um e-mail registrado anteriormente.</value>
  </data>
  <data name="UniqueUrl" xml:space="preserve">
    <value>Url está sendo usado. Experimente diferente.</value>
  </data>
  <data name="UniqueUsername" xml:space="preserve">
    <value>O nome de usuário está disponível, tente um nome diferente.</value>
  </data>
  <data name="Url" xml:space="preserve">
    <value>Insira um url exclusivo.</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Por favor, insira o nome de usuário.</value>
  </data>
  <data name="UsernameMaxLength" xml:space="preserve">
    <value>O nome de usuário não deve exceder 40 caracteres.</value>
  </data>
  <data name="ValidPassword" xml:space="preserve">
    <value>Sua senha não pode conter espaços.</value>
  </data>
  <data name="ValidUsername" xml:space="preserve">
    <value>O nome de usuário não pode conter espaços, caracteres especiais.</value>
  </data>
</root>