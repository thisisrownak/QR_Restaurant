<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address" xml:space="preserve">
    <value>Please enter address.</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Please enter Email.</value>
  </data>
  <data name="EmailFormat" xml:space="preserve">
    <value>You did not enter an email address in the correct format.</value>
  </data>
  <data name="EmailMaxLength" xml:space="preserve">
    <value>E-mail address should not exceed 200 characters.</value>
  </data>
  <data name="Exists" xml:space="preserve">
    <value>There is a record in the database with one of the entered fields.</value>
  </data>
  <data name="ImageControl" xml:space="preserve">
    <value>The file you uploaded must be an image file and should not exceed 6MB.</value>
  </data>
  <data name="MaxAddress" xml:space="preserve">
    <value>Address must not exceed 200 characters.</value>
  </data>
  <data name="MaxInt" xml:space="preserve">
    <value>Number value is greater than it should be.</value>
  </data>
  <data name="MaxLength" xml:space="preserve">
    <value>The maximum number of characters for the field has been exceeded.</value>
  </data>
  <data name="MaxManagerName" xml:space="preserve">
    <value>Name should not exceed 50 characters.</value>
  </data>
  <data name="MaxPhone" xml:space="preserve">
    <value>Phone number must not exceed 15 characters.</value>
  </data>
  <data name="MaxRestaurantDescription" xml:space="preserve">
    <value>Description must not exceed 1000 characters.</value>
  </data>
  <data name="MaxRestaurantName" xml:space="preserve">
    <value>Restaurant name should not exceed 150 characters.</value>
  </data>
  <data name="MaxSurname" xml:space="preserve">
    <value>Surname should not exceed 70 characters.</value>
  </data>
  <data name="MaxTableName" xml:space="preserve">
    <value>Table name must not exceed 500 characters.</value>
  </data>
  <data name="MaxTableNo" xml:space="preserve">
    <value>Table name must not exceed 10000 characters.</value>
  </data>
  <data name="MinInt" xml:space="preserve">
    <value>Number must be greater than zero.</value>
  </data>
  <data name="MinTableNo" xml:space="preserve">
    <value>Table number must be greater than 0.</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Please enter name.</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>Please enter your new password.</value>
  </data>
  <data name="NotEmpty" xml:space="preserve">
    <value>Please fill in the field.</value>
  </data>
  <data name="NumberFormat" xml:space="preserve">
    <value>The field should consist of numbers.</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Please enter password.</value>
  </data>
  <data name="PasswordAgain" xml:space="preserve">
    <value>Password repeat is not correct.</value>
  </data>
  <data name="PasswordMaxChar" xml:space="preserve">
    <value>Your password must not exceed 35 characters.</value>
  </data>
  <data name="PasswordMinChar" xml:space="preserve">
    <value>Your password must be at least 6 characters.</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Please enter phone number.</value>
  </data>
  <data name="RestaurantDescription" xml:space="preserve">
    <value>Please enter description.</value>
  </data>
  <data name="RestaurantName" xml:space="preserve">
    <value>Please enter restaurant name.</value>
  </data>
  <data name="RestaurantPhone" xml:space="preserve">
    <value>Please enter phone number.</value>
  </data>
  <data name="StartEndDate" xml:space="preserve">
    <value>The end date must be later than the start date.</value>
  </data>
  <data name="Surname" xml:space="preserve">
    <value>Please enter surname.</value>
  </data>
  <data name="TableName" xml:space="preserve">
    <value>Please enter table name.</value>
  </data>
  <data name="TableNo" xml:space="preserve">
    <value>Please enter table no.</value>
  </data>
  <data name="TableNoFormat" xml:space="preserve">
    <value>The table number should consist of numbers.</value>
  </data>
  <data name="UniqueEmail" xml:space="preserve">
    <value>A previously registered Email.</value>
  </data>
  <data name="UniqueUrl" xml:space="preserve">
    <value>Url is being used. Try different.</value>
  </data>
  <data name="UniqueUsername" xml:space="preserve">
    <value>Username is available, try a different name.</value>
  </data>
  <data name="Url" xml:space="preserve">
    <value>Enter unique url.</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Please enter username.</value>
  </data>
  <data name="UsernameMaxLength" xml:space="preserve">
    <value>Username must not exceed 40 characters.</value>
  </data>
  <data name="ValidPassword" xml:space="preserve">
    <value>Your password cannot contain spaces.</value>
  </data>
  <data name="ValidUsername" xml:space="preserve">
    <value>Username cannot contain spaces, special characters.</value>
  </data>
</root>